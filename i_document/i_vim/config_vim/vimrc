"enable syntax
syntax enable
syntax on
set modelines=0

au InsertLeave *hi Cursor guibg=darkered
au InsertEnter *hi Cursor guibg=darkgreen

set cursorcolumn "high light column
set cursorline   "high light line
highlight CursorLine   cterm=bold ctermbg=lightgray ctermfg=red guibg=NONE guifg=NONE
highlight CursorColumn cterm=NONE ctermbg=yellow ctermfg=NONE guibg=NONE guifg=NONE

set tabstop=4 "as is set ts=4
set softtabstop=4
set shiftwidth=4
set expandtab                                          "ctrl-v is tab

set backup
set nu
set autoindent
set cindent

""set bg=black ""dark
set background=light              "#C7EDCC, as is 199 237 204

"zf is do fold, zo is open fold,  zc is close fold
set foldenable          "允许折叠  
set foldmethod=syntax
set foldlevel=100
set foldcolumn=5 
set foldmethod=manual   "手动折叠  

"autocmd InsertLeave * se nocul  "用浅色高亮当前行  
"autocmd InsertEnter * se cul    "用浅色高亮当前行  
set hlsearch
set incsearch
set ignorecase
set showmode
set showmatch " 高亮显示匹配的括号
set ruler           "显示标尺  
set showcmd         "输入的命令显示出来，看的清楚些  
set rulerformat=%20(%2*%<%f%=\ %m%r\ %3l\ %c\ %p%%%)

"setcolor 
hi Comment    ctermfg=gray         guifg=red
hi normal     ctermfg=172                                     "220
hi Constant   ctermfg=130
hi LineNr     ctermfg=172          ctermbg=darkgray  guifg=red      "172, line no color
hi PreProc    ctermfg=136
hi Type       ctermfg=2
hi Search     cterm=bold            ctermfg=7 ctermbg=5
hi Function   ctermbg=darkgreen    ctermfg=1
hi String     ctermfg=130
hi Number     cterm=bold           ctermbg=black ctermfg=220
hi Label      ctermfg=3
hi MatchParen cterm=bold,underline ctermbg=green ctermfg=red

"auto add
inoremap ( ()<ESC>i
inoremap [ []<ESC>i
inoremap { {}<ESC>i
inoremap < <><ESC>i
inoremap " ""<ESC>i

"use vim-plug install plugin, another tool is pathogen 
call plug#begin('~/.vim/plugged')                      "download plugins into plugged dir
Plug 'ycm-core/YouCompleteMe'                          "auto code complete

Plug 'https://github.com/scrooloose/nerdtree.git'      "show dir tree
let g:NERDTreeWinPos = "right"
map <C-a> : NERDTree<CR>

set tags+=~/.vim/tags/gcc_tags/tags
map <C-u>:!ctags -R --sort=yes --c++-kinds=+p --fields=+iaS --extra=+q .<CR>

" ctags + taglist +  omnicppcomplete
Plug 'https://github.com/yegappan/taglist'
let Tlist_Ctags_Cmd='ctags'
let Tlist_Exit_OnlyWindow=1
let Tlist_Use_Left_Window=1
let Tlist_Show_One_file=1                               "only show taglist for one file
let Tlist_Sort_Type="name"
let Tlist_File_Fold_Auto_CLose=1
let Tlist_Process_File_Always=1
let Tlist_Inc_WinWidth=0
"let Tlist_Auto_Open=1
map <C-b> :TlistToggle<CR>

Plug 'http://github.com/okws/OmniCppComplete.git'
let OmniCpp_NamespaceSearch = 2
let OmniCpp_GlobalScopeSearch = 1
let OmniCpp_ShowAccess = 1
let OmniCpp_ShowPrototypeInAbbr = 1
let OmniCpp_MayCompleteDot = 1
let OmniCpp_MayCompleteArrow = 1    "input -> complete
let OmniCpp_MayCompleteScope = 1
let OmniCPp_DefaultNamespaces = ["std", "_GLIBCXX_STD"]
"automatically open and close the popup menu /preview window
au CursorMoved, InsertLeave * if pumvisible() == 0 | pclose | endif
au BufNewFile,BufRead,BufEnter *.cpp,*.hpp set omnifunc=omni#cpp#complete#Main
set completeopt=menuone,menu,longest,preview

Plug 'https://github.com/ervandew/supertab'
Plug 'preservim/tagbar'           "look up variable and functions

call plug#end()
